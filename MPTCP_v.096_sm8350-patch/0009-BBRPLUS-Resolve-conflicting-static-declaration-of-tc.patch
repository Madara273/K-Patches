From dd5fc80f237ff81a8e77fb7514164fbab8e7efff Mon Sep 17 00:00:00 2001
From: Madara273 <ravenhoxs@gmail.com>
Date: Sat, 22 Feb 2025 23:03:33 +0000
Subject: [PATCH 09/10] BBRPLUS: Resolve conflicting static declaration of
 tcp_snd_wnd_test

Signed-off-by: Madara273 <ravenhoxs@gmail.com>
---
 net/ipv4/tcp_bbrplus.c | 13 +++----------
 1 file changed, 3 insertions(+), 10 deletions(-)

diff --git a/net/ipv4/tcp_bbrplus.c b/net/ipv4/tcp_bbrplus.c
index 739f4d7534ef..987bd32ee701 100644
--- a/net/ipv4/tcp_bbrplus.c
+++ b/net/ipv4/tcp_bbrplus.c
@@ -205,17 +205,10 @@ static const u32 bbr_extra_acked_max_us = 100 * 1000;
 /* Each cycle, try to hold sub-unity gain until inflight <= BDP. */
 static const bool bbr_drain_to_target = true;   /* default: enabled */
 
-static bool tcp_snd_wnd_test(const struct tcp_sock *tp,
+/* Does at least the first segment of SKB fit into the send window? */
+extern bool tcp_snd_wnd_test(const struct tcp_sock *tp,
                              const struct sk_buff *skb,
-                             unsigned int cur_mss)
-{
-        u32 end_seq = TCP_SKB_CB(skb)->end_seq;
-
-        if (skb->len > cur_mss)
-                end_seq = TCP_SKB_CB(skb)->seq + cur_mss;
-
-        return !after(end_seq, tcp_wnd_end(tp));
-}
+                             unsigned int cur_mss);
 
 /* Do we estimate that STARTUP filled the pipe? */
 static bool bbr_full_bw_reached(const struct sock *sk)
-- 
2.47.2

